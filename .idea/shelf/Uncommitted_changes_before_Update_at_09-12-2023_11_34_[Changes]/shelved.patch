Index: src/main/java/com/stickhero/stickhero/GameScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.stickhero.stickhero;\r\n\r\nimport javafx.animation.*;\r\nimport javafx.application.Platform;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.shape.Rectangle;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.text.FontPosture;\r\nimport javafx.scene.text.Text;\r\nimport javafx.scene.transform.Rotate;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\nimport java.io.*;\r\nimport java.util.ArrayList;\r\nimport java.util.Random;\r\n\r\npublic class GameScreen extends BackgroundHandler {\r\n    private Hero hero;\r\n    private int gamespeed;\r\n    private int n_cherries;\r\n    private Image image;\r\n    private String image_link;\r\n    private HistoryStorage storage;\r\n    private int score;\r\n    private int level;\r\n    private Rectangle pillar1_rect;\r\n    private Rectangle pillar2_rect;\r\n    private Pillar pillar1;\r\n    private Pillar pillar2;\r\n    private int curr_pillar_width;\r\n    private ImageView view;\r\n    private Rectangle first_red_bar;\r\n    private Rectangle old_stick;\r\n    private InGameMusic inGameMusic;\r\n    private Thread thread;\r\n    private boolean Thread_flag = false;\r\n    private boolean game_over_flag = false;\r\n\r\n    private ImageView collectableCherryView = null;\r\n    private int isCherryGenerated = 0;\r\n\r\n    Random random = new Random();\r\n\r\n    private Text text_score;\r\n    private Text text_rewards;\r\n    private ImageView cherry_pic;\r\n    private Rectangle score_background;\r\n    private Button save_button;\r\n\r\n    public GameScreen(Stage stage, HistoryStorage storage){\r\n        super(stage);\r\n        this.hero = Hero.getInstance();\r\n        this.selectRandomImage();\r\n        this.gamespeed = 1;\r\n        this.score = 0;\r\n        this.n_cherries = 0;\r\n        this.storage = storage;\r\n        this.level = 0;\r\n        this.inGameMusic = new InGameMusic();\r\n        super.setMusic(new InGameMusic());\r\n    }\r\n    public void updateGameSpeed(int speed){\r\n        this.gamespeed = speed;\r\n    }\r\n    private String selectRandomIndex(){\r\n        Random random = new Random();\r\n        int rand = random.nextInt(11) + 1;\r\n        String num = Integer.toString(rand);\r\n        return num;\r\n    }\r\n    private void selectRandomImage(){\r\n        String randomImage = \"Pic_\" + selectRandomIndex() + \".jpg\";\r\n        Image image = new Image(getClass().getResourceAsStream(randomImage));\r\n\r\n        BackgroundSize backgroundSize = new BackgroundSize(1000,650,false,false,true,true);\r\n        BackgroundImage backgroundimage = new BackgroundImage(image, BackgroundRepeat.NO_REPEAT, BackgroundRepeat.NO_REPEAT, BackgroundPosition.DEFAULT, backgroundSize);\r\n        this.setBackground(new Background(backgroundimage));\r\n        this.image = image;\r\n        this.image_link = randomImage;\r\n    }\r\n\r\n    public ImageView generateCollectableCherry(int curr_pillar_width , int next_pillar_start){      //generates cherry if random flag is 1 else no\r\n        //binary random generated number to decide if cherry will be generated or not(put his in play game)\r\n        //generate cherry in between two pillars, so input variable gap everytime\r\n//        int isCherryGenerated = random.nextInt(0,2);\r\n\r\n//        if (isCherryGenerated == 1){\r\n//            Reward collectableCherry = new Reward();\r\n//            int x_pos = random.nextInt(curr_pillar_width , next_pillar_start);\r\n//            collectableCherryView = collectableCherry.generateReward(30 , 30 , x_pos , 490);\r\n//            return collectableCherryView;\r\n//        }\r\n//        else{\r\n//            return null;\r\n//        }\r\n        Reward collectableCherry = new Reward();\r\n        if(next_pillar_start <= curr_pillar_width){\r\n            next_pillar_start = curr_pillar_width + 1;\r\n        }\r\n\r\n        int x_pos = random.nextInt(curr_pillar_width , next_pillar_start);\r\n        collectableCherryView = collectableCherry.generateReward(30 , 30 , x_pos , 490);\r\n        isCherryGenerated = 1;\r\n        return collectableCherryView;\r\n    }\r\n    private void removeCherry(Pane pane) {          //function to remove cherry\r\n        if (collectableCherryView != null) {\r\n            isCherryGenerated = 0;\r\n            FadeTransition fadeOut = new FadeTransition(Duration.millis(500), collectableCherryView);\r\n            fadeOut.setFromValue(1.0);\r\n            fadeOut.setToValue(0.0);\r\n            fadeOut.setOnFinished(e -> pane.getChildren().remove(collectableCherryView));\r\n            fadeOut.play();\r\n        }\r\n\r\n    }\r\n\r\n    private Timeline animateFallingHeroAfterHit(int distance, double duration) {\r\n        Timeline timeline = new Timeline();\r\n\r\n        double rotation = view.getRotate();\r\n\r\n        Image heroImage = new Image(getClass().getResourceAsStream(\"Standing_Hero.png\"));\r\n        Image sideOnImage = new Image(getClass().getResourceAsStream(\"Side_On.png\"));\r\n\r\n        timeline.getKeyFrames().add(new KeyFrame(Duration.ZERO,\r\n                new KeyValue(view.imageProperty(), heroImage),\r\n                new KeyValue(view.rotateProperty(), rotation)));\r\n\r\n        timeline.getKeyFrames().add(new KeyFrame(Duration.seconds(duration),\r\n                new KeyValue(view.translateYProperty(), distance * 3),\r\n                new KeyValue(view.imageProperty(), sideOnImage),\r\n                new KeyValue(view.rotateProperty(), rotation + 360)));\r\n\r\n        timeline.play();\r\n        return timeline;\r\n    }\r\n\r\n    private Timeline animateHeroFallingAfterMiss(int distance, double duration) {\r\n        Timeline timeline = new Timeline();\r\n\r\n        double rotation = view.getRotate();\r\n\r\n        Image heroImage = new Image(getClass().getResourceAsStream(\"Standing_Hero.png\"));\r\n        Image sideOnImage = new Image(getClass().getResourceAsStream(\"Side_On.png\"));\r\n\r\n        timeline.getKeyFrames().add(new KeyFrame(Duration.ZERO,\r\n                new KeyValue(view.imageProperty(), heroImage),\r\n                new KeyValue(view.rotateProperty(), rotation)));\r\n\r\n        timeline.getKeyFrames().add(new KeyFrame(Duration.seconds(duration),\r\n                new KeyValue(view.translateYProperty(), distance * 3),\r\n                new KeyValue(view.imageProperty(), sideOnImage),\r\n                new KeyValue(view.rotateProperty(), rotation - 360)));\r\n//                new KeyValue(view.translateXProperty(), distance)));\r\n        timeline.play();\r\n        return timeline;\r\n    }\r\n\r\n\r\n    public void startGame(HomeScreen home_screen, int mode){\r\n        try {\r\n            inGameMusic.start(super.getStage());\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        Pane game_pane = this.returnBackground();\r\n        Pillar pillar = Pillar.getInstance(100,160,0,490);\r\n        Rectangle rectangle = pillar.getRectangle();\r\n        this.pillar1_rect = rectangle;\r\n        this.curr_pillar_width = 100;\r\n        this.pillar1 = pillar;\r\n\r\n        Random rand = new Random();\r\n        int rand_width = rand.nextInt(70) + 30;\r\n        int rand_posX = rand.nextInt(370 - rand_width) + 130;\r\n        Pillar pillar2 = Pillar.getInstance(rand_width,160,rand_posX,490);\r\n        Rectangle rectangle2 = pillar2.getRectangle();\r\n\r\n        this.pillar2_rect = rectangle2;\r\n        this.pillar2 = pillar2;\r\n\r\n        Rectangle rect3 = new Rectangle(10, 5);\r\n        rect3.setFill(Color.RED);\r\n        rect3.setLayoutX(rand_posX + rand_width / 2.0 - 5);\r\n        rect3.setLayoutY(490);\r\n\r\n        view = hero.generateStandingHero(35,35,55,455);\r\n\r\n        Rectangle rectangle1 = new Rectangle(70, 40);\r\n        rectangle1.setFill(Color.GRAY);\r\n        rectangle1.setLayoutX(215);\r\n        rectangle1.setLayoutY(50);\r\n        rectangle1.setArcHeight(15);\r\n        rectangle1.setArcWidth(15);\r\n        rectangle1.setOpacity(0.4);\r\n        this.score_background = rectangle1;\r\n\r\n        Text text = new Text();\r\n        text.setFont(Font.font(\"verdana\", FontPosture.REGULAR, 36));\r\n        text.setFill(Color.WHITE);\r\n        text.setLayoutX(239);\r\n        text.setLayoutY(84);\r\n        text.setText(\"0\");\r\n        this.text_score = text;\r\n\r\n        Reward cherry = new Reward();\r\n        ImageView view1 = cherry.generateReward(30,30,467,35);\r\n        this.cherry_pic = view1;\r\n\r\n        Text text1 = new Text();\r\n        text1.setFont(Font.font(\"verdana\", FontPosture.REGULAR, 16));\r\n        text1.setFill(Color.WHITE);\r\n        text1.setLayoutX(450);\r\n        text1.setLayoutY(56);\r\n        text1.setText(\"0\");\r\n        this.text_rewards = text1;\r\n\r\n        Button bt = new Button(\"SAVE\");\r\n        bt.setMinSize(50,30);\r\n        bt.setMaxSize(100,60);\r\n        bt.setLayoutX(25);\r\n        bt.setLayoutY(25);\r\n        bt.setStyle(\"-fx-background-color:rgb(255, 0, 0);-fx-border-radius: 150;-fx-font-size:15;-fx-text-fill:white\");\r\n        this.save_button = bt;\r\n\r\n        game_pane.getChildren().addAll(rectangle,bt,rectangle2,rect3,rectangle1,view,view1,text,text1);\r\n        this.setPane(game_pane);\r\n\r\n        Scene scene1 = new Scene(game_pane, 500, 650);\r\n        super.setScene(scene1);\r\n        super.getStage().setScene(scene1);\r\n        super.getStage().setResizable(false);\r\n        super.getStage().show();\r\n\r\n        this.playGame(rand_posX,rand_width,rect3, home_screen, mode);\r\n    }\r\n\r\n    public void playGame(int next_pillar_start,int next_pillar_width, Rectangle red_bar, HomeScreen home_screen, int mode){\r\n        if(mode == 1){\r\n            score = 0;\r\n        }\r\n        GameScreen game = this;\r\n        game_over_flag = false;\r\n        Stick stick = new Stick(3, curr_pillar_width - 5, 490);\r\n        Rectangle rectangle4 = stick.generateStick();\r\n\r\n        Pane pane = this.getPane();\r\n\r\n        Random rand = new Random();\r\n        int rand_width = rand.nextInt(70) + 30;\r\n        int rand_posX = rand.nextInt(370 - (next_pillar_width + 30)) + next_pillar_start + next_pillar_width + 30;\r\n        int act_rand_posX = rand_posX;\r\n        int gap = act_rand_posX - 30 - next_pillar_start - next_pillar_width;\r\n        if (rand_posX <= 500) {\r\n            rand_posX = 500;\r\n        }\r\n        Pillar pillar3 = Pillar.getInstance(rand_width, 160, rand_posX, 490);\r\n        Rectangle rectangle2 = pillar3.getRectangle();\r\n\r\n        Rectangle rect3 = new Rectangle(10, 5);\r\n        rect3.setFill(Color.RED);\r\n        rect3.setLayoutX(rand_posX + rand_width / 2.0 - 5);\r\n        rect3.setLayoutY(490);\r\n\r\n        collectableCherryView = generateCollectableCherry(pillar1.getWidth() , next_pillar_start - 30);\r\n\r\n        if (isCherryGenerated != 0){\r\n            pane.getChildren().addAll(rectangle2, rectangle4, rect3, collectableCherryView);\r\n        }\r\n        else{\r\n            collectableCherryView = null;\r\n            pane.getChildren().addAll(rectangle2, rectangle4, rect3);\r\n        }\r\n\r\n        Timeline timeline = new Timeline();\r\n        Timeline end_timeline = new Timeline();\r\n\r\n        AnimationTimer timer = new AnimationTimer() {\r\n            @Override\r\n            public void handle(long l) {\r\n                stick.extendLength();\r\n            }\r\n        };\r\n\r\n        Scene scene2 = super.getScene();\r\n        Stage stage = super.getStage();\r\n        AnimationTimer timer1 = new AnimationTimer() {\r\n            int deg = 0;\r\n            boolean flag = false;\r\n            AnimationTimer timer2 = this;\r\n\r\n            @Override\r\n            public void handle(long l) {\r\n                if (!flag) {\r\n                    if (deg == 90) {\r\n                        stop();\r\n                        fn();\r\n                    }\r\n                    else{\r\n                        rectangle4.getTransforms().add(new Rotate(1, 3, stick.getHeight()));\r\n                        deg++;\r\n                        if(deg == 89){\r\n                            rectangle4.getTransforms().add(new Rotate(1, 3, stick.getHeight()));\r\n                            deg++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            public void fn(){\r\n                end_timeline.setOnFinished(actionEvent -> {\r\n                    Thread_flag = true;\r\n                    curr_pillar_width = next_pillar_width;\r\n                    pillar1 = pillar2;\r\n                    pillar1_rect = pillar2_rect;\r\n                    pillar1_rect.setTranslateX(0);\r\n                    pillar1_rect.setLayoutX(0);\r\n                    pillar1.setX_pos(0);\r\n                    pillar2 = pillar3;\r\n                    pillar2_rect = rectangle2;\r\n                    pillar2_rect.setTranslateX(0);\r\n                    pillar2_rect.setLayoutX(gap + 30 + pillar1.getWidth());\r\n                    pillar2.setX_pos(gap + 30 + pillar1.getWidth());\r\n                    rect3.setTranslateX(0);\r\n                    rect3.setLayoutX(gap + 30 + pillar1.getWidth() + pillar3.getWidth() / 2.0 - 5);\r\n                    first_red_bar = red_bar;\r\n                    first_red_bar.setTranslateX(0);\r\n                    first_red_bar.setLayoutX(pillar1.getWidth() / 2.0 - 5);\r\n                    view.setTranslateX(0);\r\n                    view.setLayoutX(pillar1.getWidth() - 44);\r\n                    old_stick = rectangle4;\r\n\r\n                    collectableCherryView = generateCollectableCherry(curr_pillar_width, next_pillar_start);\r\n                    if (isCherryGenerated == 1) {\r\n                        collectableCherryView.setTranslateX(0);\r\n                        collectableCherryView.setLayoutX(gap + 30 + pillar1.getWidth());\r\n                    }\r\n\r\n                    game.playGame(gap + 30 + pillar1.getWidth(), pillar3.getWidth(), rect3, home_screen, 0);\r\n                });\r\n                flag = true;\r\n                Image image1 = new Image(this.getClass().getResourceAsStream(\"Standing_Hero.png\"));\r\n                Image image2 = new Image(this.getClass().getResourceAsStream(\"Side_On.png\"));\r\n\r\n                int distance;\r\n\r\n                if(stick.getHeight() < pillar2.getX_pos() - pillar1.getWidth() - pillar1.getX_pos() || stick.getHeight() > pillar2.getX_pos() + pillar2.getWidth() - pillar1.getWidth() -  pillar1.getX_pos() ){\r\n                    Thread_flag = true;\r\n                    distance =  stick.getHeight() + 30;\r\n                    for (int i = 0; i < distance; i++) {\r\n                        timeline.getKeyFrames().add(new KeyFrame(Duration.millis(10 + i * 10), new KeyValue(view.translateXProperty(), 1 + i * 1)));\r\n                        if (i % 20 == 0) {\r\n                            timeline.getKeyFrames().add(new KeyFrame(Duration.millis(5 + i * 10), new KeyValue(view.imageProperty(), image1)));\r\n                        } else if (i % 20 == 10) {\r\n                            timeline.getKeyFrames().add(new KeyFrame(Duration.millis(5 + i * 10), new KeyValue(view.imageProperty(), image2)));\r\n                        }\r\n                    }\r\n\r\n                    class Test extends Thread{\r\n                        boolean cherry_flag = false;\r\n                        @Override\r\n                        public void run() {\r\n                            while(true){\r\n                                System.out.println();\r\n                                if(Thread_flag){\r\n                                    Thread_flag = false;\r\n                                    break;\r\n                                }\r\n                                if(timeline.getStatus() == Animation.Status.RUNNING){\r\n                                    if(view.getTranslateX() >= (pillar2.getX_pos() - pillar1.getX_pos() + 10 - pillar1.getWidth()) && hero.isUpsideDown()){\r\n                                        timeline.stop();\r\n                                        end_timeline.stop();\r\n                                        Platform.runLater(() -> {\r\n                                            Timeline timeline1 = animateFallingHeroAfterHit(distance , 7);\r\n                                            timeline1.setOnFinished(actionEvent -> {\r\n                                                inGameMusic.stop();\r\n                                                text_rewards.setVisible(false);\r\n                                                text_score.setVisible(false);\r\n                                                cherry_pic.setVisible(false);\r\n                                                view.setVisible(false);\r\n                                                score_background.setVisible(false);\r\n                                                save_button.setVisible(false);\r\n\r\n                                                game_over_flag = true;\r\n\r\n                                                EndScreen endScreen = new EndScreen(stage,Hero.getInstance(),game,game.image,storage);\r\n                                                endScreen.endGame(pane,scene2,home_screen,score);\r\n                                            });\r\n                                        });\r\n                                        break;\r\n                                    }\r\n\r\n                                    int curr_pos = (int) (view.getTranslateX() + view.getLayoutX());\r\n\r\n                                    if(hero.isUpsideDown() && curr_pos >= collectableCherryView.getLayoutX() && curr_pos <= collectableCherryView.getLayoutX() + 30){\r\n                                        if(!cherry_flag){\r\n                                            cherry_flag = true;\r\n                                            collectableCherryView.setVisible(false);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    Test t = new Test();\r\n                    thread = new Thread(t);\r\n                    thread.start();\r\n\r\n                    timeline.play();\r\n                    timeline.setOnFinished(actionEvent -> {\r\n                        Timeline timeline1 = animateHeroFallingAfterMiss(distance , 7);\r\n                        timeline1.setOnFinished(actionEvent2 -> {\r\n                            inGameMusic.stop();\r\n                            text_rewards.setVisible(false);\r\n                            text_score.setVisible(false);\r\n                            cherry_pic.setVisible(false);\r\n                            view.setVisible(false);\r\n                            score_background.setVisible(false);\r\n                            save_button.setVisible(false);\r\n\r\n                            game_over_flag = true;\r\n\r\n                            EndScreen endScreen = new EndScreen(stage,Hero.getInstance(),game,game.image,storage);\r\n                            endScreen.endGame(pane,scene2,home_screen,score);\r\n                        });\r\n                    });\r\n                }\r\n\r\n                else{\r\n                    if(stick.getHeight() >= pillar2.getX_pos() - pillar1.getWidth() - pillar1.getX_pos() + pillar2.getWidth()/2.0 - 5 && stick.getHeight() <= pillar2.getX_pos() - pillar1.getWidth() - pillar1.getX_pos() + pillar2.getWidth()/2.0 + 5){\r\n                        score+=2;\r\n                    }else{\r\n                        score++;\r\n                    }\r\n\r\n                    text_score.setText(((Integer)score).toString());\r\n                    distance =  (pillar2.getX_pos() + pillar2.getWidth() - 45 - (int)view.getLayoutX());\r\n                    for (int i = 0; i < distance; i++) {\r\n                        timeline.getKeyFrames().add(new KeyFrame(Duration.millis(10 + i * 10), new KeyValue(view.translateXProperty(), 1 + i * 1)));\r\n                        if (i % 20 == 0) {\r\n                            timeline.getKeyFrames().add(new KeyFrame(Duration.millis(5 + i * 10), new KeyValue(view.imageProperty(), image1)));\r\n                        } else if (i % 20 == 10) {\r\n                            timeline.getKeyFrames().add(new KeyFrame(Duration.millis(5 + i * 10), new KeyValue(view.imageProperty(), image2)));\r\n                        }\r\n\r\n                    }\r\n                    int temp_cur = distance;\r\n                    for (int j = distance; j < distance + pillar2.getX_pos(); j++) {\r\n                        end_timeline.getKeyFrames().add(new KeyFrame(Duration.millis(10 + j * 10), new KeyValue(pillar2_rect.translateXProperty(), -(1 + (j - distance)))));\r\n                        end_timeline.getKeyFrames().add(new KeyFrame(Duration.millis(10 + j * 10), new KeyValue(pillar1_rect.translateXProperty(), -(1 + (j - distance)))));\r\n                        end_timeline.getKeyFrames().add(new KeyFrame(Duration.millis(10 + j * 10), new KeyValue(rectangle4.translateXProperty(), -(1 + (j - distance)))));\r\n                        end_timeline.getKeyFrames().add(new KeyFrame(Duration.millis(10 + j * 10), new KeyValue(red_bar.translateXProperty(), -(1 + (j - distance)))));\r\n                        end_timeline.getKeyFrames().add(new KeyFrame(Duration.millis(10 + j * 10), new KeyValue(view.translateXProperty(), temp_cur)));\r\n                        if(first_red_bar != null){\r\n                            end_timeline.getKeyFrames().add(new KeyFrame(Duration.millis(10 + j * 10), new KeyValue(first_red_bar.translateXProperty(), -(1 + (j - distance)))));\r\n                        }\r\n                        if(old_stick != null){\r\n                            old_stick.setVisible(false);\r\n                        }\r\n                        if (collectableCherryView != null) {\r\n                            end_timeline.getKeyFrames().add(new KeyFrame(Duration.millis(10 + j * 10), new KeyValue(collectableCherryView.translateXProperty(),-(1 + (j - distance)) )));\r\n                        }\r\n\r\n                        temp_cur -= 1;\r\n                    }\r\n                    for (int k = distance; k < distance + pillar3.getX_pos() - (pillar2.getWidth() + gap + 30); k++) {\r\n                        end_timeline.getKeyFrames().add(new KeyFrame(Duration.millis(10 + k * 10), new KeyValue(rectangle2.translateXProperty(), -(1 + (k - distance)))));\r\n                        end_timeline.getKeyFrames().add(new KeyFrame(Duration.millis(10 + k * 10), new KeyValue(rect3.translateXProperty(), -(1 + (k - distance)))));\r\n                        if (collectableCherryView != null) {\r\n                            end_timeline.getKeyFrames().add(new KeyFrame(Duration.millis(10 + k * 10), new KeyValue(collectableCherryView.translateXProperty(), -(1 + (k - distance)))));\r\n                        }\r\n                    }\r\n\r\n                    class Test extends Thread{\r\n                        boolean cherry_flag = false;\r\n                        @Override\r\n                        public void run() {\r\n                            while(true){\r\n                                System.out.println();\r\n                                if(Thread_flag){\r\n                                    Thread_flag = false;\r\n                                    break;\r\n                                }\r\n                                if(timeline.getStatus() == Animation.Status.RUNNING){\r\n                                    if(view.getTranslateX() >= (pillar2.getX_pos() - pillar1.getX_pos() + 10 - pillar1.getWidth()) && hero.isUpsideDown()){\r\n                                        timeline.stop();\r\n                                        end_timeline.stop();\r\n                                        Platform.runLater(() -> {\r\n                                            Timeline timeline1 = animateFallingHeroAfterHit(distance , 7);\r\n                                            timeline1.setOnFinished(actionEvent -> {\r\n                                                inGameMusic.stop();\r\n                                                text_rewards.setVisible(false);\r\n                                                text_score.setVisible(false);\r\n                                                cherry_pic.setVisible(false);\r\n                                                view.setVisible(false);\r\n                                                score_background.setVisible(false);\r\n                                                save_button.setVisible(false);\r\n\r\n                                                game_over_flag = true;\r\n\r\n                                                EndScreen endScreen = new EndScreen(stage,Hero.getInstance(),game,game.image,storage);\r\n                                                endScreen.endGame(pane,scene2,home_screen,score);\r\n                                            });\r\n                                        });\r\n                                        break;\r\n                                    }\r\n\r\n                                    int curr_pos = (int) (view.getTranslateX() + view.getLayoutX());\r\n\r\n                                    if(hero.isUpsideDown() && curr_pos >= collectableCherryView.getLayoutX() && curr_pos <= collectableCherryView.getLayoutX() + 30){\r\n                                        if(!cherry_flag){\r\n                                            cherry_flag = true;\r\n                                            n_cherries++;\r\n                                            text_rewards.setText(Integer.toString(n_cherries));\r\n\r\n                                            collectableCherryView.setVisible(false);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    Test t = new Test();\r\n                    thread = new Thread(t);\r\n                    thread.start();\r\n\r\n                    timeline.play();\r\n                    end_timeline.play();\r\n                }\r\n            }\r\n        };\r\n\r\n        this.getScene().setOnMousePressed(new EventHandler<>() {\r\n            boolean flag = false;\r\n\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                if (!flag && timeline.getStatus() == Animation.Status.STOPPED && !game_over_flag && end_timeline.getStatus() == Animation.Status.STOPPED) {\r\n                    timer.start();\r\n                    flag = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.getScene().setOnMouseReleased(e -> {\r\n            timer.stop();\r\n            timer1.start();\r\n        });\r\n\r\n        this.getScene().setOnMouseClicked(e -> {\r\n            if(timeline.getStatus() == Animation.Status.RUNNING){\r\n                Rotate flipRotation = new Rotate(180,0,35,0,Rotate.X_AXIS);\r\n                view.getTransforms().addAll(flipRotation);\r\n                if(hero.isUpsideDown()){\r\n                    hero.setUpsideDown(false);\r\n                }\r\n                else{\r\n                    hero.setUpsideDown(true);\r\n                }\r\n            }\r\n        });\r\n\r\n        int finalRand_posX = rand_posX;\r\n        this.save_button.setOnAction(actionEvent -> {\r\n            BufferedReader fileInputStream;\r\n            try {\r\n                fileInputStream = new BufferedReader(new FileReader(\"Game_Details.txt\"));\r\n            } catch (FileNotFoundException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n            int n_entries = -1;\r\n            try {\r\n                n_entries = Integer.parseInt(fileInputStream.readLine());\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n            try {\r\n                fileInputStream.close();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n\r\n            ArrayList<HistoryUnit> list;\r\n\r\n            if(n_entries == 0){\r\n                list = new ArrayList<>();\r\n            }\r\n            else{\r\n                ObjectInputStream in;\r\n                try {\r\n                    in = new ObjectInputStream(new FileInputStream(\"Game_Records.txt\"));\r\n                    try {\r\n                        list = (ArrayList<HistoryUnit>) in.readObject();\r\n                    } catch (IOException | ClassNotFoundException e) {\r\n                        throw new RuntimeException(e);\r\n                    }\r\n                } catch (IOException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n                try {\r\n                    in.close();\r\n                } catch (IOException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n            }\r\n\r\n            HistoryUnit historyUnit = new HistoryUnit(score, pillar1.getWidth(), pillar2.getWidth(), finalRand_posX, image_link);\r\n            list.add(historyUnit);\r\n\r\n            ObjectOutputStream outputStream;\r\n            try {\r\n                outputStream = new ObjectOutputStream(new FileOutputStream(\"Game_Records.txt\"));\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n\r\n            try {\r\n                outputStream.writeObject(list);\r\n                n_entries+=1;\r\n\r\n                FileOutputStream fileOutputStream;\r\n                fileOutputStream = new FileOutputStream(\"Game_Details.txt\");\r\n                Integer i1 = n_entries;\r\n\r\n                fileOutputStream.write(i1.toString().getBytes());\r\n                fileOutputStream.close();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n\r\n            try {\r\n                outputStream.close();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/stickhero/stickhero/GameScreen.java b/src/main/java/com/stickhero/stickhero/GameScreen.java
--- a/src/main/java/com/stickhero/stickhero/GameScreen.java	(revision 978d6a0f6f52b57a1033b781dee7441474a8250e)
+++ b/src/main/java/com/stickhero/stickhero/GameScreen.java	(date 1702101739388)
@@ -179,6 +179,7 @@
         this.pillar1_rect = rectangle;
         this.curr_pillar_width = 100;
         this.pillar1 = pillar;
+        game_pane.getChildren().add(rectangle);
 
         Random rand = new Random();
         int rand_width = rand.nextInt(70) + 30;
@@ -233,7 +234,7 @@
         bt.setStyle("-fx-background-color:rgb(255, 0, 0);-fx-border-radius: 150;-fx-font-size:15;-fx-text-fill:white");
         this.save_button = bt;
 
-        game_pane.getChildren().addAll(rectangle,bt,rectangle2,rect3,rectangle1,view,view1,text,text1);
+        game_pane.getChildren().addAll(bt,rectangle2,rect3,rectangle1,view,view1,text,text1);
         this.setPane(game_pane);
 
         Scene scene1 = new Scene(game_pane, 500, 650);
@@ -266,6 +267,9 @@
         }
         Pillar pillar3 = Pillar.getInstance(rand_width, 160, rand_posX, 490);
         Rectangle rectangle2 = pillar3.getRectangle();
+        if(!pillar3.isPrev_used()){
+            pane.getChildren().add(rectangle2);
+        }
 
         Rectangle rect3 = new Rectangle(10, 5);
         rect3.setFill(Color.RED);
@@ -275,11 +279,11 @@
         collectableCherryView = generateCollectableCherry(pillar1.getWidth() , next_pillar_start - 30);
 
         if (isCherryGenerated != 0){
-            pane.getChildren().addAll(rectangle2, rectangle4, rect3, collectableCherryView);
+            pane.getChildren().addAll(rectangle4, rect3, collectableCherryView);
         }
         else{
             collectableCherryView = null;
-            pane.getChildren().addAll(rectangle2, rectangle4, rect3);
+            pane.getChildren().addAll(rectangle4, rect3);
         }
 
         Timeline timeline = new Timeline();
Index: src/main/java/com/stickhero/stickhero/Pillar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.stickhero.stickhero;\r\n\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.shape.Rectangle;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class Pillar {\r\n    private int height;\r\n    private int width;\r\n    private int x_pos;\r\n    private int y_pos;\r\n    private Rectangle rectangle;\r\n\r\n    private static Map<String, Pillar> hashmap = new HashMap<String,Pillar>();\r\n\r\n    private Pillar(int width,int height, int x_pos, int y_pos){\r\n        Rectangle rectangle = new Rectangle(width,height);\r\n        this.x_pos = x_pos;\r\n        this.y_pos = y_pos;\r\n        this.width = width;\r\n        rectangle.setLayoutX(x_pos);\r\n        rectangle.setLayoutY(y_pos);\r\n        this.rectangle = rectangle;\r\n    }\r\n\r\n    public static Pillar getInstance(int width, int height, int x_pos, int y_pos){\r\n        String key = width + \" \" + x_pos;\r\n        if(!hashmap.containsKey(key)){\r\n            hashmap.put(key, new Pillar( width, height, x_pos, y_pos));\r\n        }\r\n\r\n        hashmap.get(key).getRectangle().setVisible(true);\r\n        hashmap.get(key).getRectangle().setTranslateX(0);\r\n\r\n        return hashmap.get(key);\r\n    }\r\n\r\n\r\n\r\n    public int getX_pos() {\r\n        return x_pos;\r\n    }\r\n\r\n    public int getY_pos() {\r\n        return y_pos;\r\n    }\r\n\r\n    public void setX_pos(int x_pos) {\r\n        this.x_pos = x_pos;\r\n    }\r\n\r\n    public void setY_pos(int y_pos) {\r\n        this.y_pos = y_pos;\r\n    }\r\n\r\n    public int getWidth() {\r\n        return width;\r\n    }\r\n\r\n    public Rectangle getRectangle() {\r\n        return rectangle;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/stickhero/stickhero/Pillar.java b/src/main/java/com/stickhero/stickhero/Pillar.java
--- a/src/main/java/com/stickhero/stickhero/Pillar.java	(revision 978d6a0f6f52b57a1033b781dee7441474a8250e)
+++ b/src/main/java/com/stickhero/stickhero/Pillar.java	(date 1702101346934)
@@ -12,6 +12,7 @@
     private int x_pos;
     private int y_pos;
     private Rectangle rectangle;
+    private boolean prev_used;
 
     private static Map<String, Pillar> hashmap = new HashMap<String,Pillar>();
 
@@ -23,6 +24,7 @@
         rectangle.setLayoutX(x_pos);
         rectangle.setLayoutY(y_pos);
         this.rectangle = rectangle;
+        this.prev_used = false;
     }
 
     public static Pillar getInstance(int width, int height, int x_pos, int y_pos){
@@ -30,14 +32,25 @@
         if(!hashmap.containsKey(key)){
             hashmap.put(key, new Pillar( width, height, x_pos, y_pos));
         }
+        else{
+            hashmap.get(key).setPrev_used(true);
+        }
 
         hashmap.get(key).getRectangle().setVisible(true);
         hashmap.get(key).getRectangle().setTranslateX(0);
+        hashmap.get(key).getRectangle().setLayoutX(x_pos);
+        hashmap.get(key).getRectangle().setLayoutY(y_pos);
 
         return hashmap.get(key);
     }
 
+    public boolean isPrev_used() {
+        return prev_used;
+    }
 
+    public void setPrev_used(boolean prev_used) {
+        this.prev_used = prev_used;
+    }
 
     public int getX_pos() {
         return x_pos;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"1f8d3197-9abd-4249-9eb0-21fbff063383\" name=\"Changes\" comment=\"Music Loop Works\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/stickhero/stickhero/GameScreen.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/stickhero/stickhero/GameScreen.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JavaFXApplication\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"Het\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;AbhirupDas04&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"04e6c538-132f-4b73-827d-69079b77be97\" />\r\n        <option name=\"url\" value=\"https://github.com/AbhirupDas04/StickHero.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2XrNYj2DbYGZ2HxGudb3VQaFYH6\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n    <option name=\"showMembers\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary\": \"JUnit5\",\r\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5\": \"\",\r\n    \"git-widget-placeholder\": \"Abhirup\",\r\n    \"last_opened_file_path\": \"C:/Users/ABHIRUP-ACER/Downloads/StickHero-Abhirup\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"project.structure.last.edited\": \"Modules\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"run.code.analysis.last.selected.profile\": \"pProject Default\",\r\n    \"settings.editor.selected.configurable\": \"reference.projectsettings.compiler.javacompiler\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"$PROJECT_DIR$/src/main/resources/com/stickhero/stickhero\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"$PROJECT_DIR$/src/main/resources/com/stickhero/stickhero\" />\r\n      <recent name=\"C:\\Users\\ABHIRUP-ACER\\Downloads\\CodeTesting\\Java\\StickHero\\src\\main\\resources\\com\\stickhero\\stickhero\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"com.stickhero.stickhero\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Testing_Suite\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.stickhero.stickhero.Testing_Suite\" />\r\n      <module name=\"StickHero\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.stickhero.stickhero.Testing_Suite\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"Application\" factoryName=\"Application\">\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n        <option name=\"com.soywiz.korge.intellij.UpdateResourceBeforeRunTask\" enabled=\"false\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"GroovyScriptRunConfiguration\" factoryName=\"Groovy\">\r\n      <setting name=\"path\" value=\"\" />\r\n      <setting name=\"vmparams\" value=\"\" />\r\n      <setting name=\"params\" value=\"\" />\r\n      <setting name=\"workDir\" value=\"file://$PROJECT_DIR$\" />\r\n      <setting name=\"debug\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n        <option name=\"com.soywiz.korge.intellij.UpdateResourceBeforeRunTask\" enabled=\"false\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Testing_Suite.Database_Test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StickHero\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.stickhero.stickhero.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.stickhero.stickhero\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.stickhero.stickhero.Testing_Suite\" />\r\n      <option name=\"METHOD_NAME\" value=\"Database_Test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n        <option name=\"com.soywiz.korge.intellij.UpdateResourceBeforeRunTask\" enabled=\"false\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Testing_Suite.FlyweightTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StickHero\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.stickhero.stickhero.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.stickhero.stickhero\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.stickhero.stickhero.Testing_Suite\" />\r\n      <option name=\"METHOD_NAME\" value=\"FlyweightTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n        <option name=\"com.soywiz.korge.intellij.UpdateResourceBeforeRunTask\" enabled=\"false\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Testing_Suite.Game_Test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StickHero\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.stickhero.stickhero.Testing_Suite\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.stickhero.stickhero\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.stickhero.stickhero.Testing_Suite\" />\r\n      <option name=\"METHOD_NAME\" value=\"Game_Test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n        <option name=\"com.soywiz.korge.intellij.UpdateResourceBeforeRunTask\" enabled=\"false\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JarApplication\">\r\n      <method v=\"2\">\r\n        <option name=\"com.soywiz.korge.intellij.UpdateResourceBeforeRunTask\" enabled=\"false\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"Java Scratch\">\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n        <option name=\"com.soywiz.korge.intellij.UpdateResourceBeforeRunTask\" enabled=\"false\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"StickHero\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n        <option name=\"com.soywiz.korge.intellij.UpdateResourceBeforeRunTask\" enabled=\"false\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"StickHero\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n        <option name=\"com.soywiz.korge.intellij.UpdateResourceBeforeRunTask\" enabled=\"false\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"TestNG\">\r\n      <option name=\"TEST_OBJECT\" value=\"CLASS\" />\r\n      <properties />\r\n      <listeners />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n        <option name=\"com.soywiz.korge.intellij.UpdateResourceBeforeRunTask\" enabled=\"false\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.Testing_Suite.FlyweightTest\" />\r\n        <item itemvalue=\"JUnit.Testing_Suite.Database_Test\" />\r\n        <item itemvalue=\"JUnit.Testing_Suite.Game_Test\" />\r\n        <item itemvalue=\"Application.Testing_Suite\" />\r\n        <item itemvalue=\"JUnit.Testing_Suite.Game_Test\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"1f8d3197-9abd-4249-9eb0-21fbff063383\" name=\"Changes\" comment=\"\" />\r\n      <created>1699383289127</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1699383289127</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1699788413974</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1699788413974</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1699788464259</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1699788464259</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1699788868434</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1699788868434</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1699878018418</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1699878018418</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1699880530800</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1699880530800</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1699901478823</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1699901478823</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1699936003570</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1699936003570</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1699938738927</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1699938738927</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700009761207</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700009761207</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700029274761</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700029274761</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700032755482</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700032755482</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700032782089</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700032782089</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700035867300</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700035867300</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700037643859</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700037643859</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700052431223</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700052431223</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700059273904</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700059273904</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700060386816</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700060386816</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700061260367</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700061260367</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700065468991</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700065468991</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700067149854</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700067149854</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700067575415</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700067575415</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700067713924</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700067713924</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700300025081</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700300025081</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00037\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700809795488</created>\r\n      <option name=\"number\" value=\"00037\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700809795488</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00038\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700840409290</created>\r\n      <option name=\"number\" value=\"00038\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700840409290</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00039\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700844528776</created>\r\n      <option name=\"number\" value=\"00039\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700844528776</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00040\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700932642230</created>\r\n      <option name=\"number\" value=\"00040\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700932642230</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00041\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701021511709</created>\r\n      <option name=\"number\" value=\"00041\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701021511709</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00042\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701065238222</created>\r\n      <option name=\"number\" value=\"00042\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701065238222</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00043\" summary=\"Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701087718873</created>\r\n      <option name=\"number\" value=\"00043\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00043\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701087718873</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00044\" summary=\"rough\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701967949749</created>\r\n      <option name=\"number\" value=\"00044\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00044\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701967949749</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00045\" summary=\"added animations for hero falling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702027039376</created>\r\n      <option name=\"number\" value=\"00045\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00045\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702027039376</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00046\" summary=\"added animations for hero falling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702029093606</created>\r\n      <option name=\"number\" value=\"00046\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00046\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702029093606</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00047\" summary=\"added animations for hero falling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702033761825</created>\r\n      <option name=\"number\" value=\"00047\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00047\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702033761825</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00048\" summary=\"changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702035419629</created>\r\n      <option name=\"number\" value=\"00048\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00048\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702035419629</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00049\" summary=\"changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702038344997</created>\r\n      <option name=\"number\" value=\"00049\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00049\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702038344997</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00050\" summary=\"changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702043677611</created>\r\n      <option name=\"number\" value=\"00050\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00050\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702043677612</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00051\" summary=\"changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702046697535</created>\r\n      <option name=\"number\" value=\"00051\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00051\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702046697535</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00052\" summary=\"changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702046757546</created>\r\n      <option name=\"number\" value=\"00052\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00052\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702046757546</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00053\" summary=\"changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702050664517</created>\r\n      <option name=\"number\" value=\"00053\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00053\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702050664517</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00054\" summary=\"changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702053603695</created>\r\n      <option name=\"number\" value=\"00054\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00054\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702053603695</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00055\" summary=\"changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702062683201</created>\r\n      <option name=\"number\" value=\"00055\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00055\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702062683201</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00056\" summary=\"changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702070176135</created>\r\n      <option name=\"number\" value=\"00056\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00056\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702070176135</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00057\" summary=\"One Design Pattern implemented\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702091491966</created>\r\n      <option name=\"number\" value=\"00057\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00057\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702091491966</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00058\" summary=\"Testing Suite done and Second Design Pattern added\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702092334100</created>\r\n      <option name=\"number\" value=\"00058\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00058\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702092334101</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00059\" summary=\"Automatic Testing Added\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702092891750</created>\r\n      <option name=\"number\" value=\"00059\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00059\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702092891751</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00060\" summary=\"Automatic Testing Added\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702094756522</created>\r\n      <option name=\"number\" value=\"00060\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00060\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702094756522</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00061\" summary=\"Automatic Testing Added\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702096997079</created>\r\n      <option name=\"number\" value=\"00061\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00061\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702096997079</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00062\" summary=\"Music Loop Works\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702098282563</created>\r\n      <option name=\"number\" value=\"00062\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00062\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702098282563</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"63\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/Abhirup\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Changes\" />\r\n    <MESSAGE value=\"rough\" />\r\n    <MESSAGE value=\"added animations for hero falling\" />\r\n    <MESSAGE value=\"changes\" />\r\n    <MESSAGE value=\"One Design Pattern implemented\" />\r\n    <MESSAGE value=\"Testing Suite done and Second Design Pattern added\" />\r\n    <MESSAGE value=\"Automatic Testing Added\" />\r\n    <MESSAGE value=\"Music Loop Works\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Music Loop Works\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 978d6a0f6f52b57a1033b781dee7441474a8250e)
+++ b/.idea/workspace.xml	(date 1702101739499)
@@ -7,6 +7,7 @@
     <list default="true" id="1f8d3197-9abd-4249-9eb0-21fbff063383" name="Changes" comment="Music Loop Works">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/stickhero/stickhero/GameScreen.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/stickhero/stickhero/GameScreen.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/stickhero/stickhero/Pillar.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/stickhero/stickhero/Pillar.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -237,14 +238,6 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1699383289127</updated>
-    </task>
-    <task id="LOCAL-00014" summary="Changes">
-      <option name="closed" value="true" />
-      <created>1699788413974</created>
-      <option name="number" value="00014" />
-      <option name="presentableId" value="LOCAL-00014" />
-      <option name="project" value="LOCAL" />
-      <updated>1699788413974</updated>
     </task>
     <task id="LOCAL-00015" summary="Changes">
       <option name="closed" value="true" />
@@ -630,7 +623,15 @@
       <option name="project" value="LOCAL" />
       <updated>1702098282563</updated>
     </task>
-    <option name="localTasksCounter" value="63" />
+    <task id="LOCAL-00063" summary="Music Loop Works">
+      <option name="closed" value="true" />
+      <created>1702100711325</created>
+      <option name="number" value="00063" />
+      <option name="presentableId" value="LOCAL-00063" />
+      <option name="project" value="LOCAL" />
+      <updated>1702100711325</updated>
+    </task>
+    <option name="localTasksCounter" value="64" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
